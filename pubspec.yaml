name: template
description: A new Flutter project.

version: 1.0.0+1

environment:
  sdk: ">=2.5.0 <3.0.0"

dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter
  # 核心：MVVM框架
  stacked: 2.1.6
  # http请求
  dio: 4.0.0
  # https请求
  dio_http2_adapter: 2.0.0
  # 适配屏幕
  flutter_screenutil: 5.0.0
  # App打开url
  url_launcher: 6.0.3
  # 本地存储
  shared_preferences: 2.0.5
  # 硬件存储地址
  path_provider: 2.0.1
  # 
  rxdart: ^0.26.0
  # 数据管理
  provider: 5.0.0
  # 数据管理
  get_it: ^6.0.0
  # 装饰器初始化。配合get_it使用
  injectable: 1.2.1
  # 路由管理
  get: 4.1.4
  # 提示框
  oktoast: 3.0.0
  # 连接状态
  connectivity: 3.0.3
  # 权限
  permission_handler: 7.1.0
  # 轻量数据库 (不适合本地存储的数据，使用此库)
  hive: 2.0.4
  # 获取硬件信息
  device_info: 2.0.0
  # 从应用程序打开iOS和Android手机设置页面。
  app_settings: 4.0.4
  # 解析Http
  http_parser: 4.0.0
  # 处理MIME类型定义和处理MIME多部分媒体类型流
  mime: 1.0.0
  # 动画. 各种圆形进度条
  flutter_spinkit: 5.0.0
  # 动画。快速添加闪光动画，常用于骨架屏
  shimmer: 2.0.0
  # 动画。2D动画库flare的flutter版本
  flare_flutter: 3.0.0
  # 动画。设计师做图
  lottie: 1.0.1
  # 二维码
  qr_flutter: 4.0.0
  # 数据序列化。为Protobuf的Dart实现提供运行时支持
  # protobuf: 2.0.0
  # 图片缓存equatable: 
  cached_network_image: 3.0.0
  # app显示/隐藏后台时通知。等价于封装好的 lifecycle_manager.dart
  focus_detector: 2.0.0
  # 日志(dart.dev开发)
  logging: 1.0.1
  # 自动生成model
  built_value: ^8.0.0
  # json序列化.配置自动升model
  json_annotation: ^4.0.1


dev_dependencies:
  flutter_test:
    sdk: flutter
  # 数据mock
  mockito: ^5.0.4
  # injectable_generator: ^1.2.1
  build_runner: ^2.0.1
  freezed: ^0.14.1+2
  json_serializable: ^4.1.0
  built_value_generator: ^8.0.4
  hive_generator: ^1.1.0
  # google最佳实践
  pedantic: ^1.11.0
  # 日志
  logger: ^1.0.0

flutter:
  uses-material-design: true
  assets:
    - assets/lang/zh.json
    - assets/lang/en.json

    - assets/audio/viper.mp3
    - assets/audio/bgaudio.mp3

    - assets/webview/dist/index.html
    - assets/webview/dist/
    - assets/webview/dist/css/
    - assets/webview/dist/js/
    - assets/webview/dist/musicXML/

    - assets/animations/
    - assets/animations/lottie/
    - assets/images/


  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
